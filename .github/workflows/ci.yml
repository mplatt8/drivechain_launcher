name: Build and Test Launcher

on:
  pull_request:
  push:
    branches:
      - "main"
  workflow_dispatch:

jobs:
  build:
    runs-on: ubuntu-latest
    strategy:
      fail-fast: false
      matrix:
        build: [windows, linux]

    steps:
      - uses: actions/checkout@v3

      - name: Install Dependencies (Linux only)
        if: matrix.build == 'linux'
        run: sudo apt-get update && sudo apt-get install -y build-essential

      - name: Clone Drivechain Repo and Build (Linux only)
        if: matrix.build == 'linux'
        run: |
          git clone https://github.com/mplatt8/drivechain_launcher.git
          cd drivechain_launcher
          sudo ./configure
          sudo make

      - uses: chickensoft-games/setup-godot@v1
        with:
          version: 4.2.1
          use-dotnet: false
          include-templates: true

      - name: Verify Setup
        run: godot --version

      - name: Export build
        run: |
          name="${{ fromJSON('{"windows": "Windows Desktop", "linux": "Linux/X11"}')[matrix.build] }}"
          mkdir -p build
          godot --headless --export-debug "$name" build/drivechain_launcher_${{ matrix.build }} --verbose 2>&1 | tee build.log

      - name: List build directory
        run: ls -R build

      - name: Upload build
        uses: actions/upload-artifact@v4
        with:
          name: drivechain_launcher_${{ matrix.build }}
          if-no-files-found: error
          path: build/drivechain_launcher_${{ matrix.build }}

  test_sidechains:
    runs-on: ubuntu-latest
    needs: build

    services:
      drivechain:
        image: drivechain-node
        ports:
          - 8332:8332
          - 8333:8333

      sidechain:
        image: sidechain
        ports:
          - 12345:12345
          - 12346:12346

    steps:
      - name: Checkout code
        uses: actions/checkout@v2

      - name: Set up Docker
        uses: docker/setup-buildx-action@v2

      - name: Build Drivechain Node Docker image
        run: |
          docker build -t drivechain-node -f docker/drivechain/Dockerfile .

      - name: Build Sidechain Docker image
        run: |
          docker build -t sidechain -f docker/sidechain/Dockerfile .

      - name: Run Tests
        run: ./scripts/test_sidechain.sh

  upload-artifacts-to-releases-drivechain-info:
    name: Upload artifacts to releases.drivechain.info
    runs-on: ubuntu-latest
    needs: [build, test_sidechains]
    if: github.event_name == 'push' && github.repository_owner == 'LayerTwo-Labs'
    steps:
      - name: Download artifacts
        uses: actions/download-artifact@v4

      - name: Create zip files for releases.drivechain.info
        run: |
          mv drivechain_launcher_linux drivechain-launcher-latest-x86_64-unknown-linux-gnu
          zip -r drivechain-launcher-latest-x86_64-unknown-linux-gnu.zip drivechain-launcher-latest-x86_64-unknown-linux-gnu/*

          mv drivechain_launcher_windows drivechain-launcher-latest-x86_64-w64
          zip -r drivechain-launcher-latest-x86_64-w64.zip drivechain-launcher-latest-x86_64-w64/*

      - name: Upload release assets to releases.drivechain.info
        uses: cross-the-world/ssh-scp-ssh-pipelines@latest
        with:
          host: 45.33.96.47
          user: root
          pass: ${{ secrets.RELEASES_SERVER_PW }}
          port: 22
          scp: |
            'drivechain-launcher-latest-*.zip' => '/var/www/html/'
